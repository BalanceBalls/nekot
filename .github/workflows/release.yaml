name: release
on:
  push:
    tags:
      - 'v*'

jobs:
  check-tag:
    runs-on: ubuntu-latest
    outputs:
      proceed: ${{ steps.tag-checker.outputs.proceed }}
    steps:
      - name: Check for RC in tag
        id: tag-checker
        run: |
          if [[ "${GITHUB_REF##*/}" == *"-rc"* ]]; then
            echo "RC tag detected: ${GITHUB_REF##*/}"
            echo "proceed=candidate" >> $GITHUB_ENV
            echo "::set-output name=proceed::candidate"
          else
            echo "proceed=stable" >> $GITHUB_ENV
            echo "::set-output name=proceed::stable"
          fi
  release-stable:
    needs: check-tag
    if: needs.check-tag.outputs.proceed == 'stable'
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
        with:
          submodules: "true"
      - run: git fetch --prune --unshallow
      - name: setup dependencies
        uses: actions/setup-go@v2
      - name: setup release environment
        run: |
          echo "HOMEBREW_APP_NAME=${HOMEBREW_APP_NAME}" > .release-env
          echo "GITHUB_TOKEN=${{ secrets.PUBLISHER_TOKEN }}" >> .release-env
        env:
          HOMEBREW_APP_NAME: ${{ env.HOMEBREW_APP_NAME }}
      - name: Set up Go
        uses: actions/setup-go@v5
      - name: Run GoReleaser
        permissions:
          contents: write
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean --config=.goreleaser.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-candidate:
    needs: check-tag
    if: needs.check-tag.outputs.proceed == 'candidate'
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
        with:
          submodules: "true"
      - run: git fetch --prune --unshallow
      - name: setup dependencies
        uses: actions/setup-go@v2
      - name: setup release environment
        run: |
          echo "GITHUB_TOKEN=${{ secrets.PUBLISHER_TOKEN }}" >> .release-env
        env:
          HOMEBREW_APP_NAME: ${{ env.HOMEBREW_APP_NAME }}
      - name: Set up Go
        uses: actions/setup-go@v5
      - name: Run GoReleaser
        permissions:
          contents: write
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean --config=.goreleaser-rc.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
